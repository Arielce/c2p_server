// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DataServer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gtod {

namespace {

const ::google::protobuf::Descriptor* SRequestCreateRole_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SRequestCreateRole_reflection_ = NULL;
const ::google::protobuf::Descriptor* SResponseCreateRole_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SResponseCreateRole_reflection_ = NULL;
const ::google::protobuf::Descriptor* SRequestRoleData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SRequestRoleData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SResponseRoleData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SResponseRoleData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SRequestSaveRoleData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SRequestSaveRoleData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SResponseSaveRoleData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SResponseSaveRoleData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SRequestRoleDataVersion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SRequestRoleDataVersion_reflection_ = NULL;
const ::google::protobuf::Descriptor* SResponseRoleDataVersion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SResponseRoleDataVersion_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_DataServer_2eproto() {
  protobuf_AddDesc_DataServer_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "DataServer.proto");
  GOOGLE_CHECK(file != NULL);
  SRequestCreateRole_descriptor_ = file->message_type(0);
  static const int SRequestCreateRole_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRequestCreateRole, ptname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRequestCreateRole, rolename_),
  };
  SRequestCreateRole_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SRequestCreateRole_descriptor_,
      SRequestCreateRole::default_instance_,
      SRequestCreateRole_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRequestCreateRole, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRequestCreateRole, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SRequestCreateRole));
  SResponseCreateRole_descriptor_ = file->message_type(1);
  static const int SResponseCreateRole_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseCreateRole, ptname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseCreateRole, errcode_),
  };
  SResponseCreateRole_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SResponseCreateRole_descriptor_,
      SResponseCreateRole::default_instance_,
      SResponseCreateRole_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseCreateRole, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseCreateRole, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SResponseCreateRole));
  SRequestRoleData_descriptor_ = file->message_type(2);
  static const int SRequestRoleData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRequestRoleData, ptname_),
  };
  SRequestRoleData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SRequestRoleData_descriptor_,
      SRequestRoleData::default_instance_,
      SRequestRoleData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRequestRoleData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRequestRoleData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SRequestRoleData));
  SResponseRoleData_descriptor_ = file->message_type(3);
  static const int SResponseRoleData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseRoleData, errcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseRoleData, roledata_),
  };
  SResponseRoleData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SResponseRoleData_descriptor_,
      SResponseRoleData::default_instance_,
      SResponseRoleData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseRoleData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseRoleData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SResponseRoleData));
  SRequestSaveRoleData_descriptor_ = file->message_type(4);
  static const int SRequestSaveRoleData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRequestSaveRoleData, ptname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRequestSaveRoleData, roledata_),
  };
  SRequestSaveRoleData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SRequestSaveRoleData_descriptor_,
      SRequestSaveRoleData::default_instance_,
      SRequestSaveRoleData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRequestSaveRoleData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRequestSaveRoleData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SRequestSaveRoleData));
  SResponseSaveRoleData_descriptor_ = file->message_type(5);
  static const int SResponseSaveRoleData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseSaveRoleData, ptname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseSaveRoleData, errcode_),
  };
  SResponseSaveRoleData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SResponseSaveRoleData_descriptor_,
      SResponseSaveRoleData::default_instance_,
      SResponseSaveRoleData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseSaveRoleData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseSaveRoleData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SResponseSaveRoleData));
  SRequestRoleDataVersion_descriptor_ = file->message_type(6);
  static const int SRequestRoleDataVersion_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRequestRoleDataVersion, ptname_),
  };
  SRequestRoleDataVersion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SRequestRoleDataVersion_descriptor_,
      SRequestRoleDataVersion::default_instance_,
      SRequestRoleDataVersion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRequestRoleDataVersion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SRequestRoleDataVersion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SRequestRoleDataVersion));
  SResponseRoleDataVersion_descriptor_ = file->message_type(7);
  static const int SResponseRoleDataVersion_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseRoleDataVersion, ptname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseRoleDataVersion, dataversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseRoleDataVersion, errcode_),
  };
  SResponseRoleDataVersion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SResponseRoleDataVersion_descriptor_,
      SResponseRoleDataVersion::default_instance_,
      SResponseRoleDataVersion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseRoleDataVersion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SResponseRoleDataVersion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SResponseRoleDataVersion));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_DataServer_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SRequestCreateRole_descriptor_, &SRequestCreateRole::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SResponseCreateRole_descriptor_, &SResponseCreateRole::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SRequestRoleData_descriptor_, &SRequestRoleData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SResponseRoleData_descriptor_, &SResponseRoleData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SRequestSaveRoleData_descriptor_, &SRequestSaveRoleData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SResponseSaveRoleData_descriptor_, &SResponseSaveRoleData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SRequestRoleDataVersion_descriptor_, &SRequestRoleDataVersion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SResponseRoleDataVersion_descriptor_, &SResponseRoleDataVersion::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_DataServer_2eproto() {
  delete SRequestCreateRole::default_instance_;
  delete SRequestCreateRole_reflection_;
  delete SResponseCreateRole::default_instance_;
  delete SResponseCreateRole_reflection_;
  delete SRequestRoleData::default_instance_;
  delete SRequestRoleData_reflection_;
  delete SResponseRoleData::default_instance_;
  delete SResponseRoleData_reflection_;
  delete SRequestSaveRoleData::default_instance_;
  delete SRequestSaveRoleData_reflection_;
  delete SResponseSaveRoleData::default_instance_;
  delete SResponseSaveRoleData_reflection_;
  delete SRequestRoleDataVersion::default_instance_;
  delete SRequestRoleDataVersion_reflection_;
  delete SResponseRoleDataVersion::default_instance_;
  delete SResponseRoleDataVersion_reflection_;
}

void protobuf_AddDesc_DataServer_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::roledata::protobuf_AddDesc_RoleData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020DataServer.proto\022\004gtod\032\016RoleData.proto"
    "\"6\n\022SRequestCreateRole\022\016\n\006ptName\030\001 \001(\t\022\020"
    "\n\010roleName\030\002 \001(\t\"6\n\023SResponseCreateRole\022"
    "\016\n\006ptName\030\001 \001(\t\022\017\n\007errCode\030\002 \001(\r\"\"\n\020SReq"
    "uestRoleData\022\016\n\006ptName\030\001 \001(\t\"Q\n\021SRespons"
    "eRoleData\022\017\n\007errCode\030\001 \001(\r\022+\n\010roleData\030\002"
    " \001(\0132\031.roledata.PBRoleTotalInfo\"S\n\024SRequ"
    "estSaveRoleData\022\016\n\006ptName\030\001 \001(\t\022+\n\010roleD"
    "ata\030\002 \001(\0132\031.roledata.PBRoleTotalInfo\"8\n\025"
    "SResponseSaveRoleData\022\016\n\006ptName\030\001 \001(\t\022\017\n"
    "\007errCode\030\002 \001(\r\")\n\027SRequestRoleDataVersio"
    "n\022\016\n\006ptName\030\001 \001(\t\"P\n\030SResponseRoleDataVe"
    "rsion\022\016\n\006ptName\030\001 \001(\t\022\023\n\013dataVersion\030\002 \001"
    "(\r\022\017\n\007errCode\030\003 \001(\r", 539);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DataServer.proto", &protobuf_RegisterTypes);
  SRequestCreateRole::default_instance_ = new SRequestCreateRole();
  SResponseCreateRole::default_instance_ = new SResponseCreateRole();
  SRequestRoleData::default_instance_ = new SRequestRoleData();
  SResponseRoleData::default_instance_ = new SResponseRoleData();
  SRequestSaveRoleData::default_instance_ = new SRequestSaveRoleData();
  SResponseSaveRoleData::default_instance_ = new SResponseSaveRoleData();
  SRequestRoleDataVersion::default_instance_ = new SRequestRoleDataVersion();
  SResponseRoleDataVersion::default_instance_ = new SResponseRoleDataVersion();
  SRequestCreateRole::default_instance_->InitAsDefaultInstance();
  SResponseCreateRole::default_instance_->InitAsDefaultInstance();
  SRequestRoleData::default_instance_->InitAsDefaultInstance();
  SResponseRoleData::default_instance_->InitAsDefaultInstance();
  SRequestSaveRoleData::default_instance_->InitAsDefaultInstance();
  SResponseSaveRoleData::default_instance_->InitAsDefaultInstance();
  SRequestRoleDataVersion::default_instance_->InitAsDefaultInstance();
  SResponseRoleDataVersion::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_DataServer_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_DataServer_2eproto {
  StaticDescriptorInitializer_DataServer_2eproto() {
    protobuf_AddDesc_DataServer_2eproto();
  }
} static_descriptor_initializer_DataServer_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int SRequestCreateRole::kPtNameFieldNumber;
const int SRequestCreateRole::kRoleNameFieldNumber;
#endif  // !_MSC_VER

SRequestCreateRole::SRequestCreateRole()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SRequestCreateRole::InitAsDefaultInstance() {
}

SRequestCreateRole::SRequestCreateRole(const SRequestCreateRole& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SRequestCreateRole::SharedCtor() {
  _cached_size_ = 0;
  ptname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SRequestCreateRole::~SRequestCreateRole() {
  SharedDtor();
}

void SRequestCreateRole::SharedDtor() {
  if (ptname_ != &::google::protobuf::internal::kEmptyString) {
    delete ptname_;
  }
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (this != default_instance_) {
  }
}

void SRequestCreateRole::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SRequestCreateRole::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SRequestCreateRole_descriptor_;
}

const SRequestCreateRole& SRequestCreateRole::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DataServer_2eproto();  return *default_instance_;
}

SRequestCreateRole* SRequestCreateRole::default_instance_ = NULL;

SRequestCreateRole* SRequestCreateRole::New() const {
  return new SRequestCreateRole;
}

void SRequestCreateRole::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_ptname()) {
      if (ptname_ != &::google::protobuf::internal::kEmptyString) {
        ptname_->clear();
      }
    }
    if (has_rolename()) {
      if (rolename_ != &::google::protobuf::internal::kEmptyString) {
        rolename_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SRequestCreateRole::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ptName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ptname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ptname().data(), this->ptname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_roleName;
        break;
      }
      
      // optional string roleName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roleName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SRequestCreateRole::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string ptName = 1;
  if (has_ptname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ptname().data(), this->ptname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->ptname(), output);
  }
  
  // optional string roleName = 2;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->rolename(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SRequestCreateRole::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string ptName = 1;
  if (has_ptname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ptname().data(), this->ptname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ptname(), target);
  }
  
  // optional string roleName = 2;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rolename(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SRequestCreateRole::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ptName = 1;
    if (has_ptname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ptname());
    }
    
    // optional string roleName = 2;
    if (has_rolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rolename());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SRequestCreateRole::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SRequestCreateRole* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SRequestCreateRole*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SRequestCreateRole::MergeFrom(const SRequestCreateRole& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ptname()) {
      set_ptname(from.ptname());
    }
    if (from.has_rolename()) {
      set_rolename(from.rolename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SRequestCreateRole::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRequestCreateRole::CopyFrom(const SRequestCreateRole& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRequestCreateRole::IsInitialized() const {
  
  return true;
}

void SRequestCreateRole::Swap(SRequestCreateRole* other) {
  if (other != this) {
    std::swap(ptname_, other->ptname_);
    std::swap(rolename_, other->rolename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SRequestCreateRole::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SRequestCreateRole_descriptor_;
  metadata.reflection = SRequestCreateRole_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SResponseCreateRole::kPtNameFieldNumber;
const int SResponseCreateRole::kErrCodeFieldNumber;
#endif  // !_MSC_VER

SResponseCreateRole::SResponseCreateRole()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SResponseCreateRole::InitAsDefaultInstance() {
}

SResponseCreateRole::SResponseCreateRole(const SResponseCreateRole& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SResponseCreateRole::SharedCtor() {
  _cached_size_ = 0;
  ptname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  errcode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SResponseCreateRole::~SResponseCreateRole() {
  SharedDtor();
}

void SResponseCreateRole::SharedDtor() {
  if (ptname_ != &::google::protobuf::internal::kEmptyString) {
    delete ptname_;
  }
  if (this != default_instance_) {
  }
}

void SResponseCreateRole::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SResponseCreateRole::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SResponseCreateRole_descriptor_;
}

const SResponseCreateRole& SResponseCreateRole::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DataServer_2eproto();  return *default_instance_;
}

SResponseCreateRole* SResponseCreateRole::default_instance_ = NULL;

SResponseCreateRole* SResponseCreateRole::New() const {
  return new SResponseCreateRole;
}

void SResponseCreateRole::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_ptname()) {
      if (ptname_ != &::google::protobuf::internal::kEmptyString) {
        ptname_->clear();
      }
    }
    errcode_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SResponseCreateRole::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ptName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ptname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ptname().data(), this->ptname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_errCode;
        break;
      }
      
      // optional uint32 errCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_errCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errcode_)));
          set_has_errcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SResponseCreateRole::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string ptName = 1;
  if (has_ptname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ptname().data(), this->ptname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->ptname(), output);
  }
  
  // optional uint32 errCode = 2;
  if (has_errcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->errcode(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SResponseCreateRole::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string ptName = 1;
  if (has_ptname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ptname().data(), this->ptname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ptname(), target);
  }
  
  // optional uint32 errCode = 2;
  if (has_errcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->errcode(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SResponseCreateRole::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ptName = 1;
    if (has_ptname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ptname());
    }
    
    // optional uint32 errCode = 2;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->errcode());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SResponseCreateRole::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SResponseCreateRole* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SResponseCreateRole*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SResponseCreateRole::MergeFrom(const SResponseCreateRole& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ptname()) {
      set_ptname(from.ptname());
    }
    if (from.has_errcode()) {
      set_errcode(from.errcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SResponseCreateRole::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SResponseCreateRole::CopyFrom(const SResponseCreateRole& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SResponseCreateRole::IsInitialized() const {
  
  return true;
}

void SResponseCreateRole::Swap(SResponseCreateRole* other) {
  if (other != this) {
    std::swap(ptname_, other->ptname_);
    std::swap(errcode_, other->errcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SResponseCreateRole::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SResponseCreateRole_descriptor_;
  metadata.reflection = SResponseCreateRole_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SRequestRoleData::kPtNameFieldNumber;
#endif  // !_MSC_VER

SRequestRoleData::SRequestRoleData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SRequestRoleData::InitAsDefaultInstance() {
}

SRequestRoleData::SRequestRoleData(const SRequestRoleData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SRequestRoleData::SharedCtor() {
  _cached_size_ = 0;
  ptname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SRequestRoleData::~SRequestRoleData() {
  SharedDtor();
}

void SRequestRoleData::SharedDtor() {
  if (ptname_ != &::google::protobuf::internal::kEmptyString) {
    delete ptname_;
  }
  if (this != default_instance_) {
  }
}

void SRequestRoleData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SRequestRoleData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SRequestRoleData_descriptor_;
}

const SRequestRoleData& SRequestRoleData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DataServer_2eproto();  return *default_instance_;
}

SRequestRoleData* SRequestRoleData::default_instance_ = NULL;

SRequestRoleData* SRequestRoleData::New() const {
  return new SRequestRoleData;
}

void SRequestRoleData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_ptname()) {
      if (ptname_ != &::google::protobuf::internal::kEmptyString) {
        ptname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SRequestRoleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ptName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ptname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ptname().data(), this->ptname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SRequestRoleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string ptName = 1;
  if (has_ptname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ptname().data(), this->ptname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->ptname(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SRequestRoleData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string ptName = 1;
  if (has_ptname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ptname().data(), this->ptname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ptname(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SRequestRoleData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ptName = 1;
    if (has_ptname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ptname());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SRequestRoleData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SRequestRoleData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SRequestRoleData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SRequestRoleData::MergeFrom(const SRequestRoleData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ptname()) {
      set_ptname(from.ptname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SRequestRoleData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRequestRoleData::CopyFrom(const SRequestRoleData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRequestRoleData::IsInitialized() const {
  
  return true;
}

void SRequestRoleData::Swap(SRequestRoleData* other) {
  if (other != this) {
    std::swap(ptname_, other->ptname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SRequestRoleData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SRequestRoleData_descriptor_;
  metadata.reflection = SRequestRoleData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SResponseRoleData::kErrCodeFieldNumber;
const int SResponseRoleData::kRoleDataFieldNumber;
#endif  // !_MSC_VER

SResponseRoleData::SResponseRoleData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SResponseRoleData::InitAsDefaultInstance() {
  roledata_ = const_cast< ::roledata::PBRoleTotalInfo*>(&::roledata::PBRoleTotalInfo::default_instance());
}

SResponseRoleData::SResponseRoleData(const SResponseRoleData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SResponseRoleData::SharedCtor() {
  _cached_size_ = 0;
  errcode_ = 0u;
  roledata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SResponseRoleData::~SResponseRoleData() {
  SharedDtor();
}

void SResponseRoleData::SharedDtor() {
  if (this != default_instance_) {
    delete roledata_;
  }
}

void SResponseRoleData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SResponseRoleData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SResponseRoleData_descriptor_;
}

const SResponseRoleData& SResponseRoleData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DataServer_2eproto();  return *default_instance_;
}

SResponseRoleData* SResponseRoleData::default_instance_ = NULL;

SResponseRoleData* SResponseRoleData::New() const {
  return new SResponseRoleData;
}

void SResponseRoleData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    errcode_ = 0u;
    if (has_roledata()) {
      if (roledata_ != NULL) roledata_->::roledata::PBRoleTotalInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SResponseRoleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 errCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errcode_)));
          set_has_errcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_roleData;
        break;
      }
      
      // optional .roledata.PBRoleTotalInfo roleData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roleData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roledata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SResponseRoleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 errCode = 1;
  if (has_errcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errcode(), output);
  }
  
  // optional .roledata.PBRoleTotalInfo roleData = 2;
  if (has_roledata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->roledata(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SResponseRoleData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 errCode = 1;
  if (has_errcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errcode(), target);
  }
  
  // optional .roledata.PBRoleTotalInfo roleData = 2;
  if (has_roledata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->roledata(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SResponseRoleData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 errCode = 1;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->errcode());
    }
    
    // optional .roledata.PBRoleTotalInfo roleData = 2;
    if (has_roledata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->roledata());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SResponseRoleData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SResponseRoleData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SResponseRoleData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SResponseRoleData::MergeFrom(const SResponseRoleData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errcode()) {
      set_errcode(from.errcode());
    }
    if (from.has_roledata()) {
      mutable_roledata()->::roledata::PBRoleTotalInfo::MergeFrom(from.roledata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SResponseRoleData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SResponseRoleData::CopyFrom(const SResponseRoleData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SResponseRoleData::IsInitialized() const {
  
  return true;
}

void SResponseRoleData::Swap(SResponseRoleData* other) {
  if (other != this) {
    std::swap(errcode_, other->errcode_);
    std::swap(roledata_, other->roledata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SResponseRoleData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SResponseRoleData_descriptor_;
  metadata.reflection = SResponseRoleData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SRequestSaveRoleData::kPtNameFieldNumber;
const int SRequestSaveRoleData::kRoleDataFieldNumber;
#endif  // !_MSC_VER

SRequestSaveRoleData::SRequestSaveRoleData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SRequestSaveRoleData::InitAsDefaultInstance() {
  roledata_ = const_cast< ::roledata::PBRoleTotalInfo*>(&::roledata::PBRoleTotalInfo::default_instance());
}

SRequestSaveRoleData::SRequestSaveRoleData(const SRequestSaveRoleData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SRequestSaveRoleData::SharedCtor() {
  _cached_size_ = 0;
  ptname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  roledata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SRequestSaveRoleData::~SRequestSaveRoleData() {
  SharedDtor();
}

void SRequestSaveRoleData::SharedDtor() {
  if (ptname_ != &::google::protobuf::internal::kEmptyString) {
    delete ptname_;
  }
  if (this != default_instance_) {
    delete roledata_;
  }
}

void SRequestSaveRoleData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SRequestSaveRoleData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SRequestSaveRoleData_descriptor_;
}

const SRequestSaveRoleData& SRequestSaveRoleData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DataServer_2eproto();  return *default_instance_;
}

SRequestSaveRoleData* SRequestSaveRoleData::default_instance_ = NULL;

SRequestSaveRoleData* SRequestSaveRoleData::New() const {
  return new SRequestSaveRoleData;
}

void SRequestSaveRoleData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_ptname()) {
      if (ptname_ != &::google::protobuf::internal::kEmptyString) {
        ptname_->clear();
      }
    }
    if (has_roledata()) {
      if (roledata_ != NULL) roledata_->::roledata::PBRoleTotalInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SRequestSaveRoleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ptName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ptname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ptname().data(), this->ptname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_roleData;
        break;
      }
      
      // optional .roledata.PBRoleTotalInfo roleData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roleData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roledata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SRequestSaveRoleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string ptName = 1;
  if (has_ptname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ptname().data(), this->ptname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->ptname(), output);
  }
  
  // optional .roledata.PBRoleTotalInfo roleData = 2;
  if (has_roledata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->roledata(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SRequestSaveRoleData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string ptName = 1;
  if (has_ptname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ptname().data(), this->ptname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ptname(), target);
  }
  
  // optional .roledata.PBRoleTotalInfo roleData = 2;
  if (has_roledata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->roledata(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SRequestSaveRoleData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ptName = 1;
    if (has_ptname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ptname());
    }
    
    // optional .roledata.PBRoleTotalInfo roleData = 2;
    if (has_roledata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->roledata());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SRequestSaveRoleData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SRequestSaveRoleData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SRequestSaveRoleData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SRequestSaveRoleData::MergeFrom(const SRequestSaveRoleData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ptname()) {
      set_ptname(from.ptname());
    }
    if (from.has_roledata()) {
      mutable_roledata()->::roledata::PBRoleTotalInfo::MergeFrom(from.roledata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SRequestSaveRoleData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRequestSaveRoleData::CopyFrom(const SRequestSaveRoleData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRequestSaveRoleData::IsInitialized() const {
  
  return true;
}

void SRequestSaveRoleData::Swap(SRequestSaveRoleData* other) {
  if (other != this) {
    std::swap(ptname_, other->ptname_);
    std::swap(roledata_, other->roledata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SRequestSaveRoleData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SRequestSaveRoleData_descriptor_;
  metadata.reflection = SRequestSaveRoleData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SResponseSaveRoleData::kPtNameFieldNumber;
const int SResponseSaveRoleData::kErrCodeFieldNumber;
#endif  // !_MSC_VER

SResponseSaveRoleData::SResponseSaveRoleData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SResponseSaveRoleData::InitAsDefaultInstance() {
}

SResponseSaveRoleData::SResponseSaveRoleData(const SResponseSaveRoleData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SResponseSaveRoleData::SharedCtor() {
  _cached_size_ = 0;
  ptname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  errcode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SResponseSaveRoleData::~SResponseSaveRoleData() {
  SharedDtor();
}

void SResponseSaveRoleData::SharedDtor() {
  if (ptname_ != &::google::protobuf::internal::kEmptyString) {
    delete ptname_;
  }
  if (this != default_instance_) {
  }
}

void SResponseSaveRoleData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SResponseSaveRoleData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SResponseSaveRoleData_descriptor_;
}

const SResponseSaveRoleData& SResponseSaveRoleData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DataServer_2eproto();  return *default_instance_;
}

SResponseSaveRoleData* SResponseSaveRoleData::default_instance_ = NULL;

SResponseSaveRoleData* SResponseSaveRoleData::New() const {
  return new SResponseSaveRoleData;
}

void SResponseSaveRoleData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_ptname()) {
      if (ptname_ != &::google::protobuf::internal::kEmptyString) {
        ptname_->clear();
      }
    }
    errcode_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SResponseSaveRoleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ptName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ptname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ptname().data(), this->ptname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_errCode;
        break;
      }
      
      // optional uint32 errCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_errCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errcode_)));
          set_has_errcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SResponseSaveRoleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string ptName = 1;
  if (has_ptname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ptname().data(), this->ptname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->ptname(), output);
  }
  
  // optional uint32 errCode = 2;
  if (has_errcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->errcode(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SResponseSaveRoleData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string ptName = 1;
  if (has_ptname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ptname().data(), this->ptname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ptname(), target);
  }
  
  // optional uint32 errCode = 2;
  if (has_errcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->errcode(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SResponseSaveRoleData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ptName = 1;
    if (has_ptname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ptname());
    }
    
    // optional uint32 errCode = 2;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->errcode());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SResponseSaveRoleData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SResponseSaveRoleData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SResponseSaveRoleData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SResponseSaveRoleData::MergeFrom(const SResponseSaveRoleData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ptname()) {
      set_ptname(from.ptname());
    }
    if (from.has_errcode()) {
      set_errcode(from.errcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SResponseSaveRoleData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SResponseSaveRoleData::CopyFrom(const SResponseSaveRoleData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SResponseSaveRoleData::IsInitialized() const {
  
  return true;
}

void SResponseSaveRoleData::Swap(SResponseSaveRoleData* other) {
  if (other != this) {
    std::swap(ptname_, other->ptname_);
    std::swap(errcode_, other->errcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SResponseSaveRoleData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SResponseSaveRoleData_descriptor_;
  metadata.reflection = SResponseSaveRoleData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SRequestRoleDataVersion::kPtNameFieldNumber;
#endif  // !_MSC_VER

SRequestRoleDataVersion::SRequestRoleDataVersion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SRequestRoleDataVersion::InitAsDefaultInstance() {
}

SRequestRoleDataVersion::SRequestRoleDataVersion(const SRequestRoleDataVersion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SRequestRoleDataVersion::SharedCtor() {
  _cached_size_ = 0;
  ptname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SRequestRoleDataVersion::~SRequestRoleDataVersion() {
  SharedDtor();
}

void SRequestRoleDataVersion::SharedDtor() {
  if (ptname_ != &::google::protobuf::internal::kEmptyString) {
    delete ptname_;
  }
  if (this != default_instance_) {
  }
}

void SRequestRoleDataVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SRequestRoleDataVersion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SRequestRoleDataVersion_descriptor_;
}

const SRequestRoleDataVersion& SRequestRoleDataVersion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DataServer_2eproto();  return *default_instance_;
}

SRequestRoleDataVersion* SRequestRoleDataVersion::default_instance_ = NULL;

SRequestRoleDataVersion* SRequestRoleDataVersion::New() const {
  return new SRequestRoleDataVersion;
}

void SRequestRoleDataVersion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_ptname()) {
      if (ptname_ != &::google::protobuf::internal::kEmptyString) {
        ptname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SRequestRoleDataVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ptName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ptname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ptname().data(), this->ptname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SRequestRoleDataVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string ptName = 1;
  if (has_ptname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ptname().data(), this->ptname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->ptname(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SRequestRoleDataVersion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string ptName = 1;
  if (has_ptname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ptname().data(), this->ptname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ptname(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SRequestRoleDataVersion::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ptName = 1;
    if (has_ptname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ptname());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SRequestRoleDataVersion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SRequestRoleDataVersion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SRequestRoleDataVersion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SRequestRoleDataVersion::MergeFrom(const SRequestRoleDataVersion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ptname()) {
      set_ptname(from.ptname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SRequestRoleDataVersion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRequestRoleDataVersion::CopyFrom(const SRequestRoleDataVersion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRequestRoleDataVersion::IsInitialized() const {
  
  return true;
}

void SRequestRoleDataVersion::Swap(SRequestRoleDataVersion* other) {
  if (other != this) {
    std::swap(ptname_, other->ptname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SRequestRoleDataVersion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SRequestRoleDataVersion_descriptor_;
  metadata.reflection = SRequestRoleDataVersion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SResponseRoleDataVersion::kPtNameFieldNumber;
const int SResponseRoleDataVersion::kDataVersionFieldNumber;
const int SResponseRoleDataVersion::kErrCodeFieldNumber;
#endif  // !_MSC_VER

SResponseRoleDataVersion::SResponseRoleDataVersion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SResponseRoleDataVersion::InitAsDefaultInstance() {
}

SResponseRoleDataVersion::SResponseRoleDataVersion(const SResponseRoleDataVersion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SResponseRoleDataVersion::SharedCtor() {
  _cached_size_ = 0;
  ptname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  dataversion_ = 0u;
  errcode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SResponseRoleDataVersion::~SResponseRoleDataVersion() {
  SharedDtor();
}

void SResponseRoleDataVersion::SharedDtor() {
  if (ptname_ != &::google::protobuf::internal::kEmptyString) {
    delete ptname_;
  }
  if (this != default_instance_) {
  }
}

void SResponseRoleDataVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SResponseRoleDataVersion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SResponseRoleDataVersion_descriptor_;
}

const SResponseRoleDataVersion& SResponseRoleDataVersion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DataServer_2eproto();  return *default_instance_;
}

SResponseRoleDataVersion* SResponseRoleDataVersion::default_instance_ = NULL;

SResponseRoleDataVersion* SResponseRoleDataVersion::New() const {
  return new SResponseRoleDataVersion;
}

void SResponseRoleDataVersion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_ptname()) {
      if (ptname_ != &::google::protobuf::internal::kEmptyString) {
        ptname_->clear();
      }
    }
    dataversion_ = 0u;
    errcode_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SResponseRoleDataVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ptName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ptname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ptname().data(), this->ptname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_dataVersion;
        break;
      }
      
      // optional uint32 dataVersion = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dataVersion:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dataversion_)));
          set_has_dataversion();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_errCode;
        break;
      }
      
      // optional uint32 errCode = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_errCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errcode_)));
          set_has_errcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SResponseRoleDataVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string ptName = 1;
  if (has_ptname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ptname().data(), this->ptname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->ptname(), output);
  }
  
  // optional uint32 dataVersion = 2;
  if (has_dataversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dataversion(), output);
  }
  
  // optional uint32 errCode = 3;
  if (has_errcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->errcode(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SResponseRoleDataVersion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string ptName = 1;
  if (has_ptname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ptname().data(), this->ptname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ptname(), target);
  }
  
  // optional uint32 dataVersion = 2;
  if (has_dataversion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dataversion(), target);
  }
  
  // optional uint32 errCode = 3;
  if (has_errcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->errcode(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SResponseRoleDataVersion::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ptName = 1;
    if (has_ptname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ptname());
    }
    
    // optional uint32 dataVersion = 2;
    if (has_dataversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dataversion());
    }
    
    // optional uint32 errCode = 3;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->errcode());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SResponseRoleDataVersion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SResponseRoleDataVersion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SResponseRoleDataVersion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SResponseRoleDataVersion::MergeFrom(const SResponseRoleDataVersion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ptname()) {
      set_ptname(from.ptname());
    }
    if (from.has_dataversion()) {
      set_dataversion(from.dataversion());
    }
    if (from.has_errcode()) {
      set_errcode(from.errcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SResponseRoleDataVersion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SResponseRoleDataVersion::CopyFrom(const SResponseRoleDataVersion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SResponseRoleDataVersion::IsInitialized() const {
  
  return true;
}

void SResponseRoleDataVersion::Swap(SResponseRoleDataVersion* other) {
  if (other != this) {
    std::swap(ptname_, other->ptname_);
    std::swap(dataversion_, other->dataversion_);
    std::swap(errcode_, other->errcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SResponseRoleDataVersion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SResponseRoleDataVersion_descriptor_;
  metadata.reflection = SResponseRoleDataVersion_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gtod

// @@protoc_insertion_point(global_scope)
