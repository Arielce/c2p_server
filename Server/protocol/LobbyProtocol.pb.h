// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LobbyProtocol.proto

#ifndef PROTOBUF_LobbyProtocol_2eproto__INCLUDED
#define PROTOBUF_LobbyProtocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace lobby {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_LobbyProtocol_2eproto();
void protobuf_AssignDesc_LobbyProtocol_2eproto();
void protobuf_ShutdownFile_LobbyProtocol_2eproto();

class RequestRegGameServer;
class ResponseRegGameServer;

// ===================================================================

class RequestRegGameServer : public ::google::protobuf::Message {
 public:
  RequestRegGameServer();
  virtual ~RequestRegGameServer();
  
  RequestRegGameServer(const RequestRegGameServer& from);
  
  inline RequestRegGameServer& operator=(const RequestRegGameServer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestRegGameServer& default_instance();
  
  void Swap(RequestRegGameServer* other);
  
  // implements Message ----------------------------------------------
  
  RequestRegGameServer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestRegGameServer& from);
  void MergeFrom(const RequestRegGameServer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 gsId = 1;
  inline bool has_gsid() const;
  inline void clear_gsid();
  static const int kGsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 gsid() const;
  inline void set_gsid(::google::protobuf::uint32 value);
  
  // optional uint32 gsType = 2;
  inline bool has_gstype() const;
  inline void clear_gstype();
  static const int kGsTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 gstype() const;
  inline void set_gstype(::google::protobuf::uint32 value);
  
  // optional uint32 port = 3;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 3;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:lobby.RequestRegGameServer)
 private:
  inline void set_has_gsid();
  inline void clear_has_gsid();
  inline void set_has_gstype();
  inline void clear_has_gstype();
  inline void set_has_port();
  inline void clear_has_port();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 gsid_;
  ::google::protobuf::uint32 gstype_;
  ::google::protobuf::uint32 port_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LobbyProtocol_2eproto();
  friend void protobuf_AssignDesc_LobbyProtocol_2eproto();
  friend void protobuf_ShutdownFile_LobbyProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static RequestRegGameServer* default_instance_;
};
// -------------------------------------------------------------------

class ResponseRegGameServer : public ::google::protobuf::Message {
 public:
  ResponseRegGameServer();
  virtual ~ResponseRegGameServer();
  
  ResponseRegGameServer(const ResponseRegGameServer& from);
  
  inline ResponseRegGameServer& operator=(const ResponseRegGameServer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseRegGameServer& default_instance();
  
  void Swap(ResponseRegGameServer* other);
  
  // implements Message ----------------------------------------------
  
  ResponseRegGameServer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseRegGameServer& from);
  void MergeFrom(const ResponseRegGameServer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 errCode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:lobby.ResponseRegGameServer)
 private:
  inline void set_has_errcode();
  inline void clear_has_errcode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 errcode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LobbyProtocol_2eproto();
  friend void protobuf_AssignDesc_LobbyProtocol_2eproto();
  friend void protobuf_ShutdownFile_LobbyProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static ResponseRegGameServer* default_instance_;
};
// ===================================================================


// ===================================================================

// RequestRegGameServer

// optional uint32 gsId = 1;
inline bool RequestRegGameServer::has_gsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestRegGameServer::set_has_gsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestRegGameServer::clear_has_gsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestRegGameServer::clear_gsid() {
  gsid_ = 0u;
  clear_has_gsid();
}
inline ::google::protobuf::uint32 RequestRegGameServer::gsid() const {
  return gsid_;
}
inline void RequestRegGameServer::set_gsid(::google::protobuf::uint32 value) {
  set_has_gsid();
  gsid_ = value;
}

// optional uint32 gsType = 2;
inline bool RequestRegGameServer::has_gstype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestRegGameServer::set_has_gstype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestRegGameServer::clear_has_gstype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestRegGameServer::clear_gstype() {
  gstype_ = 0u;
  clear_has_gstype();
}
inline ::google::protobuf::uint32 RequestRegGameServer::gstype() const {
  return gstype_;
}
inline void RequestRegGameServer::set_gstype(::google::protobuf::uint32 value) {
  set_has_gstype();
  gstype_ = value;
}

// optional uint32 port = 3;
inline bool RequestRegGameServer::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestRegGameServer::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestRegGameServer::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestRegGameServer::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 RequestRegGameServer::port() const {
  return port_;
}
inline void RequestRegGameServer::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
}

// -------------------------------------------------------------------

// ResponseRegGameServer

// optional uint32 errCode = 1;
inline bool ResponseRegGameServer::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseRegGameServer::set_has_errcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseRegGameServer::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseRegGameServer::clear_errcode() {
  errcode_ = 0u;
  clear_has_errcode();
}
inline ::google::protobuf::uint32 ResponseRegGameServer::errcode() const {
  return errcode_;
}
inline void ResponseRegGameServer::set_errcode(::google::protobuf::uint32 value) {
  set_has_errcode();
  errcode_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace lobby

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LobbyProtocol_2eproto__INCLUDED
