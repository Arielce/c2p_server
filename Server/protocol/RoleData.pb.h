// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoleData.proto

#ifndef PROTOBUF_RoleData_2eproto__INCLUDED
#define PROTOBUF_RoleData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace roledata {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RoleData_2eproto();
void protobuf_AssignDesc_RoleData_2eproto();
void protobuf_ShutdownFile_RoleData_2eproto();

class PBRoleTotalInfo;
class PBRoleBaseInfo;
class PBEquip;
class PBHero;
class PBHeroList;
class PBRoleBag;
class PBHeroLineup;
class PBHeroLineupList;
class PBGateInfo;
class PBBattleInfo;
class PBBattleGateList;

// ===================================================================

class PBRoleTotalInfo : public ::google::protobuf::Message {
 public:
  PBRoleTotalInfo();
  virtual ~PBRoleTotalInfo();
  
  PBRoleTotalInfo(const PBRoleTotalInfo& from);
  
  inline PBRoleTotalInfo& operator=(const PBRoleTotalInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRoleTotalInfo& default_instance();
  
  void Swap(PBRoleTotalInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBRoleTotalInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRoleTotalInfo& from);
  void MergeFrom(const PBRoleTotalInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .roledata.PBRoleBaseInfo baseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::roledata::PBRoleBaseInfo& baseinfo() const;
  inline ::roledata::PBRoleBaseInfo* mutable_baseinfo();
  inline ::roledata::PBRoleBaseInfo* release_baseinfo();
  
  // optional .roledata.PBRoleBag bagInfo = 2;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 2;
  inline const ::roledata::PBRoleBag& baginfo() const;
  inline ::roledata::PBRoleBag* mutable_baginfo();
  inline ::roledata::PBRoleBag* release_baginfo();
  
  // optional .roledata.PBHeroLineupList lineupList = 3;
  inline bool has_lineuplist() const;
  inline void clear_lineuplist();
  static const int kLineupListFieldNumber = 3;
  inline const ::roledata::PBHeroLineupList& lineuplist() const;
  inline ::roledata::PBHeroLineupList* mutable_lineuplist();
  inline ::roledata::PBHeroLineupList* release_lineuplist();
  
  // @@protoc_insertion_point(class_scope:roledata.PBRoleTotalInfo)
 private:
  inline void set_has_baseinfo();
  inline void clear_has_baseinfo();
  inline void set_has_baginfo();
  inline void clear_has_baginfo();
  inline void set_has_lineuplist();
  inline void clear_has_lineuplist();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::roledata::PBRoleBaseInfo* baseinfo_;
  ::roledata::PBRoleBag* baginfo_;
  ::roledata::PBHeroLineupList* lineuplist_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_RoleData_2eproto();
  friend void protobuf_AssignDesc_RoleData_2eproto();
  friend void protobuf_ShutdownFile_RoleData_2eproto();
  
  void InitAsDefaultInstance();
  static PBRoleTotalInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBRoleBaseInfo : public ::google::protobuf::Message {
 public:
  PBRoleBaseInfo();
  virtual ~PBRoleBaseInfo();
  
  PBRoleBaseInfo(const PBRoleBaseInfo& from);
  
  inline PBRoleBaseInfo& operator=(const PBRoleBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRoleBaseInfo& default_instance();
  
  void Swap(PBRoleBaseInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBRoleBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRoleBaseInfo& from);
  void MergeFrom(const PBRoleBaseInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 userId = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // optional uint32 dataVersion = 2;
  inline bool has_dataversion() const;
  inline void clear_dataversion();
  static const int kDataVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 dataversion() const;
  inline void set_dataversion(::google::protobuf::uint32 value);
  
  // optional string roleName = 3;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 3;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  
  // optional string ptName = 4;
  inline bool has_ptname() const;
  inline void clear_ptname();
  static const int kPtNameFieldNumber = 4;
  inline const ::std::string& ptname() const;
  inline void set_ptname(const ::std::string& value);
  inline void set_ptname(const char* value);
  inline void set_ptname(const char* value, size_t size);
  inline ::std::string* mutable_ptname();
  inline ::std::string* release_ptname();
  
  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
  // optional uint32 diamond = 7;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 7;
  inline ::google::protobuf::uint32 diamond() const;
  inline void set_diamond(::google::protobuf::uint32 value);
  
  // optional uint32 gold = 8;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 8;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);
  
  // optional uint32 vipLevel = 9;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);
  
  // optional .roledata.PBHeroList heroList = 10;
  inline bool has_herolist() const;
  inline void clear_herolist();
  static const int kHeroListFieldNumber = 10;
  inline const ::roledata::PBHeroList& herolist() const;
  inline ::roledata::PBHeroList* mutable_herolist();
  inline ::roledata::PBHeroList* release_herolist();
  
  // optional .roledata.PBBattleGateList battleGateList = 11;
  inline bool has_battlegatelist() const;
  inline void clear_battlegatelist();
  static const int kBattleGateListFieldNumber = 11;
  inline const ::roledata::PBBattleGateList& battlegatelist() const;
  inline ::roledata::PBBattleGateList* mutable_battlegatelist();
  inline ::roledata::PBBattleGateList* release_battlegatelist();
  
  // @@protoc_insertion_point(class_scope:roledata.PBRoleBaseInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_dataversion();
  inline void clear_has_dataversion();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_ptname();
  inline void clear_has_ptname();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_herolist();
  inline void clear_has_herolist();
  inline void set_has_battlegatelist();
  inline void clear_has_battlegatelist();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 dataversion_;
  ::std::string* rolename_;
  ::std::string* ptname_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 diamond_;
  ::google::protobuf::uint32 gold_;
  ::roledata::PBHeroList* herolist_;
  ::roledata::PBBattleGateList* battlegatelist_;
  ::google::protobuf::uint32 viplevel_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  friend void  protobuf_AddDesc_RoleData_2eproto();
  friend void protobuf_AssignDesc_RoleData_2eproto();
  friend void protobuf_ShutdownFile_RoleData_2eproto();
  
  void InitAsDefaultInstance();
  static PBRoleBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBEquip : public ::google::protobuf::Message {
 public:
  PBEquip();
  virtual ~PBEquip();
  
  PBEquip(const PBEquip& from);
  
  inline PBEquip& operator=(const PBEquip& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEquip& default_instance();
  
  void Swap(PBEquip* other);
  
  // implements Message ----------------------------------------------
  
  PBEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEquip& from);
  void MergeFrom(const PBEquip& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 equipId = 1;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipIdFieldNumber = 1;
  inline ::google::protobuf::uint32 equipid() const;
  inline void set_equipid(::google::protobuf::uint32 value);
  
  // optional uint32 equipNum = 3;
  inline bool has_equipnum() const;
  inline void clear_equipnum();
  static const int kEquipNumFieldNumber = 3;
  inline ::google::protobuf::uint32 equipnum() const;
  inline void set_equipnum(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:roledata.PBEquip)
 private:
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_equipnum();
  inline void clear_has_equipnum();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 equipid_;
  ::google::protobuf::uint32 equipnum_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_RoleData_2eproto();
  friend void protobuf_AssignDesc_RoleData_2eproto();
  friend void protobuf_ShutdownFile_RoleData_2eproto();
  
  void InitAsDefaultInstance();
  static PBEquip* default_instance_;
};
// -------------------------------------------------------------------

class PBHero : public ::google::protobuf::Message {
 public:
  PBHero();
  virtual ~PBHero();
  
  PBHero(const PBHero& from);
  
  inline PBHero& operator=(const PBHero& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBHero& default_instance();
  
  void Swap(PBHero* other);
  
  // implements Message ----------------------------------------------
  
  PBHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBHero& from);
  void MergeFrom(const PBHero& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 heroId = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);
  
  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
  // optional uint32 heroRank = 4;
  inline bool has_herorank() const;
  inline void clear_herorank();
  static const int kHeroRankFieldNumber = 4;
  inline ::google::protobuf::uint32 herorank() const;
  inline void set_herorank(::google::protobuf::uint32 value);
  
  // optional uint32 upgradeLevel = 5;
  inline bool has_upgradelevel() const;
  inline void clear_upgradelevel();
  static const int kUpgradeLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 upgradelevel() const;
  inline void set_upgradelevel(::google::protobuf::uint32 value);
  
  // optional uint32 fragmentNum = 6;
  inline bool has_fragmentnum() const;
  inline void clear_fragmentnum();
  static const int kFragmentNumFieldNumber = 6;
  inline ::google::protobuf::uint32 fragmentnum() const;
  inline void set_fragmentnum(::google::protobuf::uint32 value);
  
  // repeated .roledata.PBEquip equips = 7;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 7;
  inline const ::roledata::PBEquip& equips(int index) const;
  inline ::roledata::PBEquip* mutable_equips(int index);
  inline ::roledata::PBEquip* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::roledata::PBEquip >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::roledata::PBEquip >*
      mutable_equips();
  
  // @@protoc_insertion_point(class_scope:roledata.PBHero)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_herorank();
  inline void clear_has_herorank();
  inline void set_has_upgradelevel();
  inline void clear_has_upgradelevel();
  inline void set_has_fragmentnum();
  inline void clear_has_fragmentnum();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 herorank_;
  ::google::protobuf::uint32 upgradelevel_;
  ::google::protobuf::uint32 fragmentnum_;
  ::google::protobuf::RepeatedPtrField< ::roledata::PBEquip > equips_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_RoleData_2eproto();
  friend void protobuf_AssignDesc_RoleData_2eproto();
  friend void protobuf_ShutdownFile_RoleData_2eproto();
  
  void InitAsDefaultInstance();
  static PBHero* default_instance_;
};
// -------------------------------------------------------------------

class PBHeroList : public ::google::protobuf::Message {
 public:
  PBHeroList();
  virtual ~PBHeroList();
  
  PBHeroList(const PBHeroList& from);
  
  inline PBHeroList& operator=(const PBHeroList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBHeroList& default_instance();
  
  void Swap(PBHeroList* other);
  
  // implements Message ----------------------------------------------
  
  PBHeroList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBHeroList& from);
  void MergeFrom(const PBHeroList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .roledata.PBHero heros = 1;
  inline int heros_size() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 1;
  inline const ::roledata::PBHero& heros(int index) const;
  inline ::roledata::PBHero* mutable_heros(int index);
  inline ::roledata::PBHero* add_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::roledata::PBHero >&
      heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::roledata::PBHero >*
      mutable_heros();
  
  // @@protoc_insertion_point(class_scope:roledata.PBHeroList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::roledata::PBHero > heros_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_RoleData_2eproto();
  friend void protobuf_AssignDesc_RoleData_2eproto();
  friend void protobuf_ShutdownFile_RoleData_2eproto();
  
  void InitAsDefaultInstance();
  static PBHeroList* default_instance_;
};
// -------------------------------------------------------------------

class PBRoleBag : public ::google::protobuf::Message {
 public:
  PBRoleBag();
  virtual ~PBRoleBag();
  
  PBRoleBag(const PBRoleBag& from);
  
  inline PBRoleBag& operator=(const PBRoleBag& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRoleBag& default_instance();
  
  void Swap(PBRoleBag* other);
  
  // implements Message ----------------------------------------------
  
  PBRoleBag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRoleBag& from);
  void MergeFrom(const PBRoleBag& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .roledata.PBEquip equips = 1;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::roledata::PBEquip& equips(int index) const;
  inline ::roledata::PBEquip* mutable_equips(int index);
  inline ::roledata::PBEquip* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::roledata::PBEquip >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::roledata::PBEquip >*
      mutable_equips();
  
  // @@protoc_insertion_point(class_scope:roledata.PBRoleBag)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::roledata::PBEquip > equips_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_RoleData_2eproto();
  friend void protobuf_AssignDesc_RoleData_2eproto();
  friend void protobuf_ShutdownFile_RoleData_2eproto();
  
  void InitAsDefaultInstance();
  static PBRoleBag* default_instance_;
};
// -------------------------------------------------------------------

class PBHeroLineup : public ::google::protobuf::Message {
 public:
  PBHeroLineup();
  virtual ~PBHeroLineup();
  
  PBHeroLineup(const PBHeroLineup& from);
  
  inline PBHeroLineup& operator=(const PBHeroLineup& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBHeroLineup& default_instance();
  
  void Swap(PBHeroLineup* other);
  
  // implements Message ----------------------------------------------
  
  PBHeroLineup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBHeroLineup& from);
  void MergeFrom(const PBHeroLineup& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 lineupId = 1;
  inline bool has_lineupid() const;
  inline void clear_lineupid();
  static const int kLineupIdFieldNumber = 1;
  inline ::google::protobuf::uint32 lineupid() const;
  inline void set_lineupid(::google::protobuf::uint32 value);
  
  // repeated uint32 heroId = 2;
  inline int heroid_size() const;
  inline void clear_heroid();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 heroid(int index) const;
  inline void set_heroid(int index, ::google::protobuf::uint32 value);
  inline void add_heroid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heroid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heroid();
  
  // @@protoc_insertion_point(class_scope:roledata.PBHeroLineup)
 private:
  inline void set_has_lineupid();
  inline void clear_has_lineupid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroid_;
  ::google::protobuf::uint32 lineupid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_RoleData_2eproto();
  friend void protobuf_AssignDesc_RoleData_2eproto();
  friend void protobuf_ShutdownFile_RoleData_2eproto();
  
  void InitAsDefaultInstance();
  static PBHeroLineup* default_instance_;
};
// -------------------------------------------------------------------

class PBHeroLineupList : public ::google::protobuf::Message {
 public:
  PBHeroLineupList();
  virtual ~PBHeroLineupList();
  
  PBHeroLineupList(const PBHeroLineupList& from);
  
  inline PBHeroLineupList& operator=(const PBHeroLineupList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBHeroLineupList& default_instance();
  
  void Swap(PBHeroLineupList* other);
  
  // implements Message ----------------------------------------------
  
  PBHeroLineupList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBHeroLineupList& from);
  void MergeFrom(const PBHeroLineupList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .roledata.PBHeroLineup lineupList = 1;
  inline int lineuplist_size() const;
  inline void clear_lineuplist();
  static const int kLineupListFieldNumber = 1;
  inline const ::roledata::PBHeroLineup& lineuplist(int index) const;
  inline ::roledata::PBHeroLineup* mutable_lineuplist(int index);
  inline ::roledata::PBHeroLineup* add_lineuplist();
  inline const ::google::protobuf::RepeatedPtrField< ::roledata::PBHeroLineup >&
      lineuplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::roledata::PBHeroLineup >*
      mutable_lineuplist();
  
  // @@protoc_insertion_point(class_scope:roledata.PBHeroLineupList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::roledata::PBHeroLineup > lineuplist_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_RoleData_2eproto();
  friend void protobuf_AssignDesc_RoleData_2eproto();
  friend void protobuf_ShutdownFile_RoleData_2eproto();
  
  void InitAsDefaultInstance();
  static PBHeroLineupList* default_instance_;
};
// -------------------------------------------------------------------

class PBGateInfo : public ::google::protobuf::Message {
 public:
  PBGateInfo();
  virtual ~PBGateInfo();
  
  PBGateInfo(const PBGateInfo& from);
  
  inline PBGateInfo& operator=(const PBGateInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGateInfo& default_instance();
  
  void Swap(PBGateInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBGateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGateInfo& from);
  void MergeFrom(const PBGateInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 gateId = 1;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateIdFieldNumber = 1;
  inline ::google::protobuf::uint32 gateid() const;
  inline void set_gateid(::google::protobuf::uint32 value);
  
  // optional uint32 gateStar = 2;
  inline bool has_gatestar() const;
  inline void clear_gatestar();
  static const int kGateStarFieldNumber = 2;
  inline ::google::protobuf::uint32 gatestar() const;
  inline void set_gatestar(::google::protobuf::uint32 value);
  
  // optional bool hasFight = 3;
  inline bool has_hasfight() const;
  inline void clear_hasfight();
  static const int kHasFightFieldNumber = 3;
  inline bool hasfight() const;
  inline void set_hasfight(bool value);
  
  // @@protoc_insertion_point(class_scope:roledata.PBGateInfo)
 private:
  inline void set_has_gateid();
  inline void clear_has_gateid();
  inline void set_has_gatestar();
  inline void clear_has_gatestar();
  inline void set_has_hasfight();
  inline void clear_has_hasfight();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 gateid_;
  ::google::protobuf::uint32 gatestar_;
  bool hasfight_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_RoleData_2eproto();
  friend void protobuf_AssignDesc_RoleData_2eproto();
  friend void protobuf_ShutdownFile_RoleData_2eproto();
  
  void InitAsDefaultInstance();
  static PBGateInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBBattleInfo : public ::google::protobuf::Message {
 public:
  PBBattleInfo();
  virtual ~PBBattleInfo();
  
  PBBattleInfo(const PBBattleInfo& from);
  
  inline PBBattleInfo& operator=(const PBBattleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBattleInfo& default_instance();
  
  void Swap(PBBattleInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBBattleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBattleInfo& from);
  void MergeFrom(const PBBattleInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 battleId = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // repeated .roledata.PBGateInfo gates = 2;
  inline int gates_size() const;
  inline void clear_gates();
  static const int kGatesFieldNumber = 2;
  inline const ::roledata::PBGateInfo& gates(int index) const;
  inline ::roledata::PBGateInfo* mutable_gates(int index);
  inline ::roledata::PBGateInfo* add_gates();
  inline const ::google::protobuf::RepeatedPtrField< ::roledata::PBGateInfo >&
      gates() const;
  inline ::google::protobuf::RepeatedPtrField< ::roledata::PBGateInfo >*
      mutable_gates();
  
  // @@protoc_insertion_point(class_scope:roledata.PBBattleInfo)
 private:
  inline void set_has_battleid();
  inline void clear_has_battleid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::roledata::PBGateInfo > gates_;
  ::google::protobuf::uint32 battleid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_RoleData_2eproto();
  friend void protobuf_AssignDesc_RoleData_2eproto();
  friend void protobuf_ShutdownFile_RoleData_2eproto();
  
  void InitAsDefaultInstance();
  static PBBattleInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBBattleGateList : public ::google::protobuf::Message {
 public:
  PBBattleGateList();
  virtual ~PBBattleGateList();
  
  PBBattleGateList(const PBBattleGateList& from);
  
  inline PBBattleGateList& operator=(const PBBattleGateList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBattleGateList& default_instance();
  
  void Swap(PBBattleGateList* other);
  
  // implements Message ----------------------------------------------
  
  PBBattleGateList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBattleGateList& from);
  void MergeFrom(const PBBattleGateList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .roledata.PBBattleInfo battleGates = 1;
  inline int battlegates_size() const;
  inline void clear_battlegates();
  static const int kBattleGatesFieldNumber = 1;
  inline const ::roledata::PBBattleInfo& battlegates(int index) const;
  inline ::roledata::PBBattleInfo* mutable_battlegates(int index);
  inline ::roledata::PBBattleInfo* add_battlegates();
  inline const ::google::protobuf::RepeatedPtrField< ::roledata::PBBattleInfo >&
      battlegates() const;
  inline ::google::protobuf::RepeatedPtrField< ::roledata::PBBattleInfo >*
      mutable_battlegates();
  
  // @@protoc_insertion_point(class_scope:roledata.PBBattleGateList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::roledata::PBBattleInfo > battlegates_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_RoleData_2eproto();
  friend void protobuf_AssignDesc_RoleData_2eproto();
  friend void protobuf_ShutdownFile_RoleData_2eproto();
  
  void InitAsDefaultInstance();
  static PBBattleGateList* default_instance_;
};
// ===================================================================


// ===================================================================

// PBRoleTotalInfo

// optional .roledata.PBRoleBaseInfo baseInfo = 1;
inline bool PBRoleTotalInfo::has_baseinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBRoleTotalInfo::set_has_baseinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBRoleTotalInfo::clear_has_baseinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBRoleTotalInfo::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::roledata::PBRoleBaseInfo::Clear();
  clear_has_baseinfo();
}
inline const ::roledata::PBRoleBaseInfo& PBRoleTotalInfo::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::roledata::PBRoleBaseInfo* PBRoleTotalInfo::mutable_baseinfo() {
  set_has_baseinfo();
  if (baseinfo_ == NULL) baseinfo_ = new ::roledata::PBRoleBaseInfo;
  return baseinfo_;
}
inline ::roledata::PBRoleBaseInfo* PBRoleTotalInfo::release_baseinfo() {
  clear_has_baseinfo();
  ::roledata::PBRoleBaseInfo* temp = baseinfo_;
  baseinfo_ = NULL;
  return temp;
}

// optional .roledata.PBRoleBag bagInfo = 2;
inline bool PBRoleTotalInfo::has_baginfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBRoleTotalInfo::set_has_baginfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBRoleTotalInfo::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBRoleTotalInfo::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::roledata::PBRoleBag::Clear();
  clear_has_baginfo();
}
inline const ::roledata::PBRoleBag& PBRoleTotalInfo::baginfo() const {
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
}
inline ::roledata::PBRoleBag* PBRoleTotalInfo::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::roledata::PBRoleBag;
  return baginfo_;
}
inline ::roledata::PBRoleBag* PBRoleTotalInfo::release_baginfo() {
  clear_has_baginfo();
  ::roledata::PBRoleBag* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}

// optional .roledata.PBHeroLineupList lineupList = 3;
inline bool PBRoleTotalInfo::has_lineuplist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBRoleTotalInfo::set_has_lineuplist() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBRoleTotalInfo::clear_has_lineuplist() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBRoleTotalInfo::clear_lineuplist() {
  if (lineuplist_ != NULL) lineuplist_->::roledata::PBHeroLineupList::Clear();
  clear_has_lineuplist();
}
inline const ::roledata::PBHeroLineupList& PBRoleTotalInfo::lineuplist() const {
  return lineuplist_ != NULL ? *lineuplist_ : *default_instance_->lineuplist_;
}
inline ::roledata::PBHeroLineupList* PBRoleTotalInfo::mutable_lineuplist() {
  set_has_lineuplist();
  if (lineuplist_ == NULL) lineuplist_ = new ::roledata::PBHeroLineupList;
  return lineuplist_;
}
inline ::roledata::PBHeroLineupList* PBRoleTotalInfo::release_lineuplist() {
  clear_has_lineuplist();
  ::roledata::PBHeroLineupList* temp = lineuplist_;
  lineuplist_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBRoleBaseInfo

// optional uint32 userId = 1;
inline bool PBRoleBaseInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBRoleBaseInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBRoleBaseInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBRoleBaseInfo::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 PBRoleBaseInfo::userid() const {
  return userid_;
}
inline void PBRoleBaseInfo::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// optional uint32 dataVersion = 2;
inline bool PBRoleBaseInfo::has_dataversion() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBRoleBaseInfo::set_has_dataversion() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBRoleBaseInfo::clear_has_dataversion() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBRoleBaseInfo::clear_dataversion() {
  dataversion_ = 0u;
  clear_has_dataversion();
}
inline ::google::protobuf::uint32 PBRoleBaseInfo::dataversion() const {
  return dataversion_;
}
inline void PBRoleBaseInfo::set_dataversion(::google::protobuf::uint32 value) {
  set_has_dataversion();
  dataversion_ = value;
}

// optional string roleName = 3;
inline bool PBRoleBaseInfo::has_rolename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBRoleBaseInfo::set_has_rolename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBRoleBaseInfo::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBRoleBaseInfo::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& PBRoleBaseInfo::rolename() const {
  return *rolename_;
}
inline void PBRoleBaseInfo::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void PBRoleBaseInfo::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void PBRoleBaseInfo::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBRoleBaseInfo::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* PBRoleBaseInfo::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string ptName = 4;
inline bool PBRoleBaseInfo::has_ptname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBRoleBaseInfo::set_has_ptname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBRoleBaseInfo::clear_has_ptname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBRoleBaseInfo::clear_ptname() {
  if (ptname_ != &::google::protobuf::internal::kEmptyString) {
    ptname_->clear();
  }
  clear_has_ptname();
}
inline const ::std::string& PBRoleBaseInfo::ptname() const {
  return *ptname_;
}
inline void PBRoleBaseInfo::set_ptname(const ::std::string& value) {
  set_has_ptname();
  if (ptname_ == &::google::protobuf::internal::kEmptyString) {
    ptname_ = new ::std::string;
  }
  ptname_->assign(value);
}
inline void PBRoleBaseInfo::set_ptname(const char* value) {
  set_has_ptname();
  if (ptname_ == &::google::protobuf::internal::kEmptyString) {
    ptname_ = new ::std::string;
  }
  ptname_->assign(value);
}
inline void PBRoleBaseInfo::set_ptname(const char* value, size_t size) {
  set_has_ptname();
  if (ptname_ == &::google::protobuf::internal::kEmptyString) {
    ptname_ = new ::std::string;
  }
  ptname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBRoleBaseInfo::mutable_ptname() {
  set_has_ptname();
  if (ptname_ == &::google::protobuf::internal::kEmptyString) {
    ptname_ = new ::std::string;
  }
  return ptname_;
}
inline ::std::string* PBRoleBaseInfo::release_ptname() {
  clear_has_ptname();
  if (ptname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ptname_;
    ptname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 level = 5;
inline bool PBRoleBaseInfo::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBRoleBaseInfo::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBRoleBaseInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBRoleBaseInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBRoleBaseInfo::level() const {
  return level_;
}
inline void PBRoleBaseInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 exp = 6;
inline bool PBRoleBaseInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBRoleBaseInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBRoleBaseInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBRoleBaseInfo::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 PBRoleBaseInfo::exp() const {
  return exp_;
}
inline void PBRoleBaseInfo::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint32 diamond = 7;
inline bool PBRoleBaseInfo::has_diamond() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBRoleBaseInfo::set_has_diamond() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBRoleBaseInfo::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBRoleBaseInfo::clear_diamond() {
  diamond_ = 0u;
  clear_has_diamond();
}
inline ::google::protobuf::uint32 PBRoleBaseInfo::diamond() const {
  return diamond_;
}
inline void PBRoleBaseInfo::set_diamond(::google::protobuf::uint32 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional uint32 gold = 8;
inline bool PBRoleBaseInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBRoleBaseInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBRoleBaseInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBRoleBaseInfo::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 PBRoleBaseInfo::gold() const {
  return gold_;
}
inline void PBRoleBaseInfo::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint32 vipLevel = 9;
inline bool PBRoleBaseInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBRoleBaseInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBRoleBaseInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBRoleBaseInfo::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 PBRoleBaseInfo::viplevel() const {
  return viplevel_;
}
inline void PBRoleBaseInfo::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// optional .roledata.PBHeroList heroList = 10;
inline bool PBRoleBaseInfo::has_herolist() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBRoleBaseInfo::set_has_herolist() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBRoleBaseInfo::clear_has_herolist() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBRoleBaseInfo::clear_herolist() {
  if (herolist_ != NULL) herolist_->::roledata::PBHeroList::Clear();
  clear_has_herolist();
}
inline const ::roledata::PBHeroList& PBRoleBaseInfo::herolist() const {
  return herolist_ != NULL ? *herolist_ : *default_instance_->herolist_;
}
inline ::roledata::PBHeroList* PBRoleBaseInfo::mutable_herolist() {
  set_has_herolist();
  if (herolist_ == NULL) herolist_ = new ::roledata::PBHeroList;
  return herolist_;
}
inline ::roledata::PBHeroList* PBRoleBaseInfo::release_herolist() {
  clear_has_herolist();
  ::roledata::PBHeroList* temp = herolist_;
  herolist_ = NULL;
  return temp;
}

// optional .roledata.PBBattleGateList battleGateList = 11;
inline bool PBRoleBaseInfo::has_battlegatelist() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PBRoleBaseInfo::set_has_battlegatelist() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PBRoleBaseInfo::clear_has_battlegatelist() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PBRoleBaseInfo::clear_battlegatelist() {
  if (battlegatelist_ != NULL) battlegatelist_->::roledata::PBBattleGateList::Clear();
  clear_has_battlegatelist();
}
inline const ::roledata::PBBattleGateList& PBRoleBaseInfo::battlegatelist() const {
  return battlegatelist_ != NULL ? *battlegatelist_ : *default_instance_->battlegatelist_;
}
inline ::roledata::PBBattleGateList* PBRoleBaseInfo::mutable_battlegatelist() {
  set_has_battlegatelist();
  if (battlegatelist_ == NULL) battlegatelist_ = new ::roledata::PBBattleGateList;
  return battlegatelist_;
}
inline ::roledata::PBBattleGateList* PBRoleBaseInfo::release_battlegatelist() {
  clear_has_battlegatelist();
  ::roledata::PBBattleGateList* temp = battlegatelist_;
  battlegatelist_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBEquip

// optional uint32 equipId = 1;
inline bool PBEquip::has_equipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBEquip::set_has_equipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBEquip::clear_has_equipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBEquip::clear_equipid() {
  equipid_ = 0u;
  clear_has_equipid();
}
inline ::google::protobuf::uint32 PBEquip::equipid() const {
  return equipid_;
}
inline void PBEquip::set_equipid(::google::protobuf::uint32 value) {
  set_has_equipid();
  equipid_ = value;
}

// optional uint32 equipNum = 3;
inline bool PBEquip::has_equipnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBEquip::set_has_equipnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBEquip::clear_has_equipnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBEquip::clear_equipnum() {
  equipnum_ = 0u;
  clear_has_equipnum();
}
inline ::google::protobuf::uint32 PBEquip::equipnum() const {
  return equipnum_;
}
inline void PBEquip::set_equipnum(::google::protobuf::uint32 value) {
  set_has_equipnum();
  equipnum_ = value;
}

// -------------------------------------------------------------------

// PBHero

// optional uint32 heroId = 1;
inline bool PBHero::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBHero::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBHero::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBHero::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 PBHero::heroid() const {
  return heroid_;
}
inline void PBHero::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// optional uint32 level = 2;
inline bool PBHero::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBHero::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBHero::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBHero::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBHero::level() const {
  return level_;
}
inline void PBHero::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 exp = 3;
inline bool PBHero::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBHero::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBHero::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBHero::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 PBHero::exp() const {
  return exp_;
}
inline void PBHero::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint32 heroRank = 4;
inline bool PBHero::has_herorank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBHero::set_has_herorank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBHero::clear_has_herorank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBHero::clear_herorank() {
  herorank_ = 0u;
  clear_has_herorank();
}
inline ::google::protobuf::uint32 PBHero::herorank() const {
  return herorank_;
}
inline void PBHero::set_herorank(::google::protobuf::uint32 value) {
  set_has_herorank();
  herorank_ = value;
}

// optional uint32 upgradeLevel = 5;
inline bool PBHero::has_upgradelevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBHero::set_has_upgradelevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBHero::clear_has_upgradelevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBHero::clear_upgradelevel() {
  upgradelevel_ = 0u;
  clear_has_upgradelevel();
}
inline ::google::protobuf::uint32 PBHero::upgradelevel() const {
  return upgradelevel_;
}
inline void PBHero::set_upgradelevel(::google::protobuf::uint32 value) {
  set_has_upgradelevel();
  upgradelevel_ = value;
}

// optional uint32 fragmentNum = 6;
inline bool PBHero::has_fragmentnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBHero::set_has_fragmentnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBHero::clear_has_fragmentnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBHero::clear_fragmentnum() {
  fragmentnum_ = 0u;
  clear_has_fragmentnum();
}
inline ::google::protobuf::uint32 PBHero::fragmentnum() const {
  return fragmentnum_;
}
inline void PBHero::set_fragmentnum(::google::protobuf::uint32 value) {
  set_has_fragmentnum();
  fragmentnum_ = value;
}

// repeated .roledata.PBEquip equips = 7;
inline int PBHero::equips_size() const {
  return equips_.size();
}
inline void PBHero::clear_equips() {
  equips_.Clear();
}
inline const ::roledata::PBEquip& PBHero::equips(int index) const {
  return equips_.Get(index);
}
inline ::roledata::PBEquip* PBHero::mutable_equips(int index) {
  return equips_.Mutable(index);
}
inline ::roledata::PBEquip* PBHero::add_equips() {
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::roledata::PBEquip >&
PBHero::equips() const {
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::roledata::PBEquip >*
PBHero::mutable_equips() {
  return &equips_;
}

// -------------------------------------------------------------------

// PBHeroList

// repeated .roledata.PBHero heros = 1;
inline int PBHeroList::heros_size() const {
  return heros_.size();
}
inline void PBHeroList::clear_heros() {
  heros_.Clear();
}
inline const ::roledata::PBHero& PBHeroList::heros(int index) const {
  return heros_.Get(index);
}
inline ::roledata::PBHero* PBHeroList::mutable_heros(int index) {
  return heros_.Mutable(index);
}
inline ::roledata::PBHero* PBHeroList::add_heros() {
  return heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::roledata::PBHero >&
PBHeroList::heros() const {
  return heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::roledata::PBHero >*
PBHeroList::mutable_heros() {
  return &heros_;
}

// -------------------------------------------------------------------

// PBRoleBag

// repeated .roledata.PBEquip equips = 1;
inline int PBRoleBag::equips_size() const {
  return equips_.size();
}
inline void PBRoleBag::clear_equips() {
  equips_.Clear();
}
inline const ::roledata::PBEquip& PBRoleBag::equips(int index) const {
  return equips_.Get(index);
}
inline ::roledata::PBEquip* PBRoleBag::mutable_equips(int index) {
  return equips_.Mutable(index);
}
inline ::roledata::PBEquip* PBRoleBag::add_equips() {
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::roledata::PBEquip >&
PBRoleBag::equips() const {
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::roledata::PBEquip >*
PBRoleBag::mutable_equips() {
  return &equips_;
}

// -------------------------------------------------------------------

// PBHeroLineup

// optional uint32 lineupId = 1;
inline bool PBHeroLineup::has_lineupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBHeroLineup::set_has_lineupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBHeroLineup::clear_has_lineupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBHeroLineup::clear_lineupid() {
  lineupid_ = 0u;
  clear_has_lineupid();
}
inline ::google::protobuf::uint32 PBHeroLineup::lineupid() const {
  return lineupid_;
}
inline void PBHeroLineup::set_lineupid(::google::protobuf::uint32 value) {
  set_has_lineupid();
  lineupid_ = value;
}

// repeated uint32 heroId = 2;
inline int PBHeroLineup::heroid_size() const {
  return heroid_.size();
}
inline void PBHeroLineup::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint32 PBHeroLineup::heroid(int index) const {
  return heroid_.Get(index);
}
inline void PBHeroLineup::set_heroid(int index, ::google::protobuf::uint32 value) {
  heroid_.Set(index, value);
}
inline void PBHeroLineup::add_heroid(::google::protobuf::uint32 value) {
  heroid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBHeroLineup::heroid() const {
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBHeroLineup::mutable_heroid() {
  return &heroid_;
}

// -------------------------------------------------------------------

// PBHeroLineupList

// repeated .roledata.PBHeroLineup lineupList = 1;
inline int PBHeroLineupList::lineuplist_size() const {
  return lineuplist_.size();
}
inline void PBHeroLineupList::clear_lineuplist() {
  lineuplist_.Clear();
}
inline const ::roledata::PBHeroLineup& PBHeroLineupList::lineuplist(int index) const {
  return lineuplist_.Get(index);
}
inline ::roledata::PBHeroLineup* PBHeroLineupList::mutable_lineuplist(int index) {
  return lineuplist_.Mutable(index);
}
inline ::roledata::PBHeroLineup* PBHeroLineupList::add_lineuplist() {
  return lineuplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::roledata::PBHeroLineup >&
PBHeroLineupList::lineuplist() const {
  return lineuplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::roledata::PBHeroLineup >*
PBHeroLineupList::mutable_lineuplist() {
  return &lineuplist_;
}

// -------------------------------------------------------------------

// PBGateInfo

// optional uint32 gateId = 1;
inline bool PBGateInfo::has_gateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBGateInfo::set_has_gateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBGateInfo::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBGateInfo::clear_gateid() {
  gateid_ = 0u;
  clear_has_gateid();
}
inline ::google::protobuf::uint32 PBGateInfo::gateid() const {
  return gateid_;
}
inline void PBGateInfo::set_gateid(::google::protobuf::uint32 value) {
  set_has_gateid();
  gateid_ = value;
}

// optional uint32 gateStar = 2;
inline bool PBGateInfo::has_gatestar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBGateInfo::set_has_gatestar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBGateInfo::clear_has_gatestar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBGateInfo::clear_gatestar() {
  gatestar_ = 0u;
  clear_has_gatestar();
}
inline ::google::protobuf::uint32 PBGateInfo::gatestar() const {
  return gatestar_;
}
inline void PBGateInfo::set_gatestar(::google::protobuf::uint32 value) {
  set_has_gatestar();
  gatestar_ = value;
}

// optional bool hasFight = 3;
inline bool PBGateInfo::has_hasfight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBGateInfo::set_has_hasfight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBGateInfo::clear_has_hasfight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBGateInfo::clear_hasfight() {
  hasfight_ = false;
  clear_has_hasfight();
}
inline bool PBGateInfo::hasfight() const {
  return hasfight_;
}
inline void PBGateInfo::set_hasfight(bool value) {
  set_has_hasfight();
  hasfight_ = value;
}

// -------------------------------------------------------------------

// PBBattleInfo

// optional uint32 battleId = 1;
inline bool PBBattleInfo::has_battleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBBattleInfo::set_has_battleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBBattleInfo::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBBattleInfo::clear_battleid() {
  battleid_ = 0u;
  clear_has_battleid();
}
inline ::google::protobuf::uint32 PBBattleInfo::battleid() const {
  return battleid_;
}
inline void PBBattleInfo::set_battleid(::google::protobuf::uint32 value) {
  set_has_battleid();
  battleid_ = value;
}

// repeated .roledata.PBGateInfo gates = 2;
inline int PBBattleInfo::gates_size() const {
  return gates_.size();
}
inline void PBBattleInfo::clear_gates() {
  gates_.Clear();
}
inline const ::roledata::PBGateInfo& PBBattleInfo::gates(int index) const {
  return gates_.Get(index);
}
inline ::roledata::PBGateInfo* PBBattleInfo::mutable_gates(int index) {
  return gates_.Mutable(index);
}
inline ::roledata::PBGateInfo* PBBattleInfo::add_gates() {
  return gates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::roledata::PBGateInfo >&
PBBattleInfo::gates() const {
  return gates_;
}
inline ::google::protobuf::RepeatedPtrField< ::roledata::PBGateInfo >*
PBBattleInfo::mutable_gates() {
  return &gates_;
}

// -------------------------------------------------------------------

// PBBattleGateList

// repeated .roledata.PBBattleInfo battleGates = 1;
inline int PBBattleGateList::battlegates_size() const {
  return battlegates_.size();
}
inline void PBBattleGateList::clear_battlegates() {
  battlegates_.Clear();
}
inline const ::roledata::PBBattleInfo& PBBattleGateList::battlegates(int index) const {
  return battlegates_.Get(index);
}
inline ::roledata::PBBattleInfo* PBBattleGateList::mutable_battlegates(int index) {
  return battlegates_.Mutable(index);
}
inline ::roledata::PBBattleInfo* PBBattleGateList::add_battlegates() {
  return battlegates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::roledata::PBBattleInfo >&
PBBattleGateList::battlegates() const {
  return battlegates_;
}
inline ::google::protobuf::RepeatedPtrField< ::roledata::PBBattleInfo >*
PBBattleGateList::mutable_battlegates() {
  return &battlegates_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace roledata

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RoleData_2eproto__INCLUDED
